import{S as F,i as a,s as o,k as p,l as n,m as y,h as x,n as V,b as s,H as K,B as L,a4 as I,q as J,r as e,u as z,$ as k,e as t,a0 as N}from"./index-f0bdd1f8.js";const S="",H=typeof window<"u"&&window.Blob&&new Blob([atob(S)],{type:"text/javascript;charset=utf-8"});function C(){const W=H&&(window.URL||window.webkitURL).createObjectURL(H);try{return W?new Worker(W):new Worker("data:application/javascript;base64,"+S)}finally{W&&(window.URL||window.webkitURL).revokeObjectURL(W)}}var R={exports:{}};(function(W){function X(d){var l=void 0;typeof d=="string"?l=[d]:l=d.raw;for(var Z="",m=0;m<l.length;m++)Z+=l[m].replace(/\\\n[ \t]*/g,"").replace(/\\`/g,"`"),m<(arguments.length<=1?0:arguments.length-1)&&(Z+=arguments.length<=m+1?void 0:arguments[m+1]);var i=Z.split(`
`),c=null;return i.forEach(function(G){var b=G.match(/^(\s+)\S+/);if(b){var Y=b[1].length;c?c=Math.min(c,Y):c=Y}}),c!==null&&(Z=i.map(function(G){return G[0]===" "?G.slice(c):G}).join(`
`)),Z=Z.trim(),Z.replace(/\\n/g,`
`)}W.exports=X})(R);const h=R.exports;function v(W){let X=(W[3]?W[1]:h(W[1]))+"",d;return{c(){d=J(X)},l(l){d=e(l,X)},m(l,Z){s(l,d,Z)},p(l,Z){Z&10&&X!==(X=(l[3]?l[1]:h(l[1]))+"")&&z(d,X)},d(l){l&&x(d)}}}function w(W){let X,d;return{c(){X=new k(!1),d=t(),this.h()},l(l){X=N(l,!1),d=t(),this.h()},h(){X.a=d},m(l,Z){X.m(W[4],l,Z),s(l,d,Z)},p(l,Z){Z&16&&X.p(l[4])},d(l){l&&x(d),l&&X.d()}}}function f(W){let X,d,l,Z;function m(G,b){return G[4]?w:v}let i=m(W),c=i(W);return{c(){X=p("div"),d=p("pre"),l=p("code"),c.c(),this.h()},l(G){X=n(G,"DIV",{class:!0});var b=y(X);d=n(b,"PRE",{class:!0});var Y=y(d);l=n(Y,"CODE",{class:!0});var u=y(l);c.l(u),u.forEach(x),Y.forEach(x),b.forEach(x),this.h()},h(){V(l,"class",Z="hljs d4r-rounded-lg language-"+W[2]),V(d,"class","d4r-overflow-x d4r-text-sm"),V(X,"class",W[0])},m(G,b){s(G,X,b),K(X,d),K(d,l),c.m(l,null)},p(G,[b]){i===(i=m(G))&&c?c.p(G,b):(c.d(1),c=i(G),c&&(c.c(),c.m(l,null))),b&4&&Z!==(Z="hljs d4r-rounded-lg language-"+G[2])&&V(l,"class",Z),b&1&&V(X,"class",G[0])},i:L,o:L,d(G){G&&x(X),c.d()}}}function g(W,X,d){let{class:l=""}=X,{code:Z}=X,{language:m=void 0}=X,{noDedent:i=!0}=X,c;typeof window<"u"&&(c=new C,c==null||c.postMessage({code:i?Z:h(Z),language:m}),c==null||c.addEventListener("message",b=>{d(4,G=b.data)}),I(()=>c.terminate()));let G;return W.$$set=b=>{"class"in b&&d(0,l=b.class),"code"in b&&d(1,Z=b.code),"language"in b&&d(2,m=b.language),"noDedent"in b&&d(3,i=b.noDedent)},W.$$.update=()=>{W.$$.dirty&46&&(c==null||c.postMessage({code:i?Z:h(Z),language:m}))},[l,Z,m,i,G,c]}class j extends F{constructor(X){super(),a(this,X,g,f,o,{class:0,code:1,language:2,noDedent:3})}}export{j as C};
