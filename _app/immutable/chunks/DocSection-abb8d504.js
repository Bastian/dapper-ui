import{S as K,i as L,s as H,k as e,l as Y,m as p,h as s,n as t,b as R,H as F,B as E,a9 as $,q as r,r as T,u as g,a5 as ll,e as Q,a6 as cl,a as C,w as S,c as P,x as J,y as z,f as u,t as y,z as I,I as k,J as N,K as w,L as v,g as dl,d as Xl}from"./index-be153a96.js";import{D as bl}from"./DocSectionText-14b597b7.js";import{T as Zl}from"./ProgressBarMeterBase.svelte_svelte_type_style_lang-4604d585.js";const A="",M=typeof window<"u"&&window.Blob&&new Blob([atob(A)],{type:"text/javascript;charset=utf-8"});function Wl(){const Z=M&&(window.URL||window.webkitURL).createObjectURL(M);try{return Z?new Worker(Z):new Worker("data:application/javascript;base64,"+A)}finally{Z&&(window.URL||window.webkitURL).revokeObjectURL(Z)}}var U={},Gl={get exports(){return U},set exports(Z){U=Z}};(function(Z){function l(X){var c=void 0;typeof X=="string"?c=[X]:c=X.raw;for(var d="",W=0;W<c.length;W++)d+=c[W].replace(/\\\n[ \t]*/g,"").replace(/\\`/g,"`"),W<(arguments.length<=1?0:arguments.length-1)&&(d+=arguments.length<=W+1?void 0:arguments[W+1]);var G=d.split(`
`),b=null;return G.forEach(function(n){var m=n.match(/^(\s+)\S+/);if(m){var i=m[1].length;b?b=Math.min(b,i):b=i}}),b!==null&&(d=G.map(function(n){return n[0]===" "?n.slice(b):n}).join(`
`)),d=d.trim(),d.replace(/\\n/g,`
`)}Z.exports=l})(Gl);const f=U;function ml(Z){let l=(Z[3]?Z[1]:f(Z[1]))+"",X;return{c(){X=r(l)},l(c){X=T(c,l)},m(c,d){R(c,X,d)},p(c,d){d&10&&l!==(l=(c[3]?c[1]:f(c[1]))+"")&&g(X,l)},d(c){c&&s(X)}}}function il(Z){let l,X;return{c(){l=new ll(!1),X=Q(),this.h()},l(c){l=cl(c,!1),X=Q(),this.h()},h(){l.a=X},m(c,d){l.m(Z[4],c,d),R(c,X,d)},p(c,d){d&16&&l.p(c[4])},d(c){c&&s(X),c&&l.d()}}}function nl(Z){let l,X,c,d,W;function G(m,i){return m[4]?il:ml}let b=G(Z),n=b(Z);return{c(){l=e("div"),X=e("pre"),c=e("code"),n.c(),this.h()},l(m){l=Y(m,"DIV",{class:!0});var i=p(l);X=Y(i,"PRE",{class:!0});var x=p(X);c=Y(x,"CODE",{class:!0});var h=p(c);n.l(h),h.forEach(s),x.forEach(s),i.forEach(s),this.h()},h(){t(c,"class",d="hljs d4r-rounded-lg language-"+Z[2]),t(X,"class","d4r-text-sm"),t(l,"class",W="d4r-overflow-x-auto "+Z[0])},m(m,i){R(m,l,i),F(l,X),F(X,c),n.m(c,null)},p(m,[i]){b===(b=G(m))&&n?n.p(m,i):(n.d(1),n=b(m),n&&(n.c(),n.m(c,null))),i&4&&d!==(d="hljs d4r-rounded-lg language-"+m[2])&&t(c,"class",d),i&1&&W!==(W="d4r-overflow-x-auto "+m[0])&&t(l,"class",W)},i:E,o:E,d(m){m&&s(l),n.d()}}}function xl(Z,l,X){let{class:c=""}=l,{code:d}=l,{language:W=void 0}=l,{noDedent:G=!0}=l,b;typeof window<"u"&&(b=new Wl,b==null||b.postMessage({code:G?d:f(d),language:W}),b==null||b.addEventListener("message",m=>{X(4,n=m.data)}),$(()=>b.terminate()));let n;return Z.$$set=m=>{"class"in m&&X(0,c=m.class),"code"in m&&X(1,d=m.code),"language"in m&&X(2,W=m.language),"noDedent"in m&&X(3,G=m.noDedent)},Z.$$.update=()=>{Z.$$.dirty&46&&(b==null||b.postMessage({code:G?d:f(d),language:W}))},[c,d,W,G,n,b]}class sl extends K{constructor(l){super(),L(this,l,xl,nl,H,{class:0,code:1,language:2,noDedent:3})}}function Vl(Z){let l,X,c,d,W=[...Array(Z[1].split(`
`).length)].map(D).join(`
`)+"",G,b,n,m,i,x,h;return i=new sl({props:{class:"d4r-py-2",language:Z[2],code:Z[1],noDedent:Z[3]}}),{c(){l=e("div"),X=e("div"),c=e("pre"),d=e("code"),G=r(W),n=C(),m=e("div"),S(i.$$.fragment),this.h()},l(V){l=Y(V,"DIV",{class:!0});var a=p(l);X=Y(a,"DIV",{class:!0});var o=p(X);c=Y(o,"PRE",{});var B=p(c);d=Y(B,"CODE",{class:!0});var j=p(d);G=T(j,W),j.forEach(s),B.forEach(s),o.forEach(s),n=P(a),m=Y(a,"DIV",{class:!0});var O=p(m);J(i.$$.fragment,O),O.forEach(s),a.forEach(s),this.h()},h(){t(d,"class",b="language-"+Z[2]),t(X,"class","d4r-mt-2 d4r-select-none d4r-border-r d4r-border-neutral-200 d4r-px-4 d4r-text-right d4r-text-sm d4r-text-neutral-500 dark:d4r-border-dark-600"),t(m,"class","d4r-overflow-x-auto"),t(l,"class",x="d4r-flex d4r-items-start d4r-gap-2 "+Z[0])},m(V,a){R(V,l,a),F(l,X),F(X,c),F(c,d),F(d,G),F(l,n),F(l,m),z(i,m,null),h=!0},p(V,[a]){(!h||a&2)&&W!==(W=[...Array(V[1].split(`
`).length)].map(D).join(`
`)+"")&&g(G,W),(!h||a&4&&b!==(b="language-"+V[2]))&&t(d,"class",b);const o={};a&4&&(o.language=V[2]),a&2&&(o.code=V[1]),a&8&&(o.noDedent=V[3]),i.$set(o),(!h||a&1&&x!==(x="d4r-flex d4r-items-start d4r-gap-2 "+V[0]))&&t(l,"class",x)},i(V){h||(u(i.$$.fragment,V),h=!0)},o(V){y(i.$$.fragment,V),h=!1},d(V){V&&s(l),I(i)}}}const D=(Z,l)=>`${l+1}`;function tl(Z,l,X){let{class:c=""}=l,{code:d}=l,{language:W=void 0}=l,{noDedent:G=!0}=l;return Z.$$set=b=>{"class"in b&&X(0,c=b.class),"code"in b&&X(1,d=b.code),"language"in b&&X(2,W=b.language),"noDedent"in b&&X(3,G=b.noDedent)},[c,d,W,G]}class Sl extends K{constructor(l){super(),L(this,l,tl,Vl,H,{class:0,code:1,language:2,noDedent:3})}}function hl(Z){let l,X,c;const d=Z[2].default,W=k(d,Z,Z[1],null);return{c(){l=e("div"),W&&W.c(),this.h()},l(G){l=Y(G,"DIV",{class:!0});var b=p(l);W&&W.l(b),b.forEach(s),this.h()},h(){t(l,"class",X="d4r-w-full d4r-overflow-hidden d4r-rounded d4r-border d4r-border-neutral-200 d4r-bg-white dark:d4r-border-dark-600 dark:d4r-bg-dark-800 "+Z[0])},m(G,b){R(G,l,b),W&&W.m(l,null),c=!0},p(G,[b]){W&&W.p&&(!c||b&2)&&N(W,d,G,G[1],c?v(d,G[1],b,null):w(G[1]),null),(!c||b&1&&X!==(X="d4r-w-full d4r-overflow-hidden d4r-rounded d4r-border d4r-border-neutral-200 d4r-bg-white dark:d4r-border-dark-600 dark:d4r-bg-dark-800 "+G[0]))&&t(l,"class",X)},i(G){c||(u(W,G),c=!0)},o(G){y(W,G),c=!1},d(G){G&&s(l),W&&W.d(G)}}}function al(Z,l,X){let{$$slots:c={},$$scope:d}=l,{class:W=""}=l;return Z.$$set=G=>{"class"in G&&X(0,W=G.class),"$$scope"in G&&X(1,d=G.$$scope)},[W,d,c]}class Jl extends K{constructor(l){super(),L(this,l,al,hl,H,{class:0})}}function ul(Z){let l;const X=Z[0].default,c=k(X,Z,Z[1],null);return{c(){c&&c.c()},l(d){c&&c.l(d)},m(d,W){c&&c.m(d,W),l=!0},p(d,W){c&&c.p&&(!l||W&2)&&N(c,X,d,d[1],l?v(X,d[1],W,null):w(d[1]),null)},i(d){l||(u(c,d),l=!0)},o(d){y(c,d),l=!1},d(d){c&&c.d(d)}}}function Fl(Z){let l,X;return l=new Zl({props:{tag:"h2",size:"xl",weight:"bold",contrast:"high",$$slots:{default:[ul]},$$scope:{ctx:Z}}}),{c(){S(l.$$.fragment)},l(c){J(l.$$.fragment,c)},m(c,d){z(l,c,d),X=!0},p(c,[d]){const W={};d&2&&(W.$$scope={dirty:d,ctx:c}),l.$set(W)},i(c){X||(u(l.$$.fragment,c),X=!0)},o(c){y(l.$$.fragment,c),X=!1},d(c){I(l,c)}}}function el(Z,l,X){let{$$slots:c={},$$scope:d}=l;return Z.$$set=W=>{"$$scope"in W&&X(1,d=W.$$scope)},[c,d]}class Yl extends K{constructor(l){super(),L(this,l,el,Fl,H,{})}}const pl=Z=>({}),_=Z=>({});function q(Z){let l,X;return l=new Yl({props:{$$slots:{default:[yl]},$$scope:{ctx:Z}}}),{c(){S(l.$$.fragment)},l(c){J(l.$$.fragment,c)},m(c,d){z(l,c,d),X=!0},p(c,d){const W={};d&10&&(W.$$scope={dirty:d,ctx:c}),l.$set(W)},i(c){X||(u(l.$$.fragment,c),X=!0)},o(c){y(l.$$.fragment,c),X=!1},d(c){I(l,c)}}}function yl(Z){let l;return{c(){l=r(Z[1])},l(X){l=T(X,Z[1])},m(X,c){R(X,l,c)},p(X,c){c&2&&g(l,X[1])},d(X){X&&s(l)}}}function ol(Z){let l;const X=Z[2].description,c=k(X,Z,Z[3],_);return{c(){c&&c.c()},l(d){c&&c.l(d)},m(d,W){c&&c.m(d,W),l=!0},p(d,W){c&&c.p&&(!l||W&8)&&N(c,X,d,d[3],l?v(X,d[3],W,pl):w(d[3]),_)},i(d){l||(u(c,d),l=!0)},o(d){y(c,d),l=!1},d(d){c&&c.d(d)}}}function Rl(Z){let l,X,c,d,W,G,b=Z[1]&&q(Z);c=new bl({props:{$$slots:{default:[ol]},$$scope:{ctx:Z}}});const n=Z[2].default,m=k(n,Z,Z[3],null);return{c(){l=e("article"),b&&b.c(),X=C(),S(c.$$.fragment),d=C(),m&&m.c(),this.h()},l(i){l=Y(i,"ARTICLE",{class:!0});var x=p(l);b&&b.l(x),X=P(x),J(c.$$.fragment,x),d=P(x),m&&m.l(x),x.forEach(s),this.h()},h(){t(l,"class",W="d4r-space-y-2 "+Z[0])},m(i,x){R(i,l,x),b&&b.m(l,null),F(l,X),z(c,l,null),F(l,d),m&&m.m(l,null),G=!0},p(i,[x]){i[1]?b?(b.p(i,x),x&2&&u(b,1)):(b=q(i),b.c(),u(b,1),b.m(l,X)):b&&(dl(),y(b,1,1,()=>{b=null}),Xl());const h={};x&8&&(h.$$scope={dirty:x,ctx:i}),c.$set(h),m&&m.p&&(!G||x&8)&&N(m,n,i,i[3],G?v(n,i[3],x,null):w(i[3]),null),(!G||x&1&&W!==(W="d4r-space-y-2 "+i[0]))&&t(l,"class",W)},i(i){G||(u(b),u(c.$$.fragment,i),u(m,i),G=!0)},o(i){y(b),y(c.$$.fragment,i),y(m,i),G=!1},d(i){i&&s(l),b&&b.d(),I(c),m&&m.d(i)}}}function Kl(Z,l,X){let{$$slots:c={},$$scope:d}=l,{class:W=""}=l,{title:G}=l;return Z.$$set=b=>{"class"in b&&X(0,W=b.class),"title"in b&&X(1,G=b.title),"$$scope"in b&&X(3,d=b.$$scope)},[W,G,c,d]}class zl extends K{constructor(l){super(),L(this,l,Kl,Rl,H,{class:0,title:1})}}export{sl as C,zl as D,Sl as S,Jl as a,Yl as b};
